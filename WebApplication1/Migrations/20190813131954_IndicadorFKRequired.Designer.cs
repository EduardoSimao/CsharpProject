// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190813131954_IndicadorFKRequired")]
    partial class IndicadorFKRequired
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.Indicador", b =>
                {
                    b.Property<int>("IndicadorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int>("SetorID");

                    b.Property<bool>("Situacao");

                    b.HasKey("IndicadorId");

                    b.HasIndex("SetorID");

                    b.ToTable("Indicadores");
                });

            modelBuilder.Entity("WebApplication1.Models.Setor", b =>
                {
                    b.Property<int>("SetorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<bool>("Situacao");

                    b.HasKey("SetorID");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("WebApplication1.Models.Indicador", b =>
                {
                    b.HasOne("WebApplication1.Models.Setor", "setor")
                        .WithMany()
                        .HasForeignKey("SetorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
